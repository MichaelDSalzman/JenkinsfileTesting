
def someEnums

boolean shouldExecuteStage(def pipelineStage) {
    return env.BUILD_STEPS_TO_INCLUDE.tokenize(',[]').collect{it.trim()}.contains(pipelineStage.toString())
}

pipeline{
    agent any //TODO
  
    stages{
        stage("Init") {
            steps{
                echo "========Running init========"
                script {
                    someEnums = load("ci/jenkins/someEnums.groovy")

                    load("ci/jenkins/env.groovy").loadProps(someEnums)
                    echo env.BUILD_STEPS_TO_INCLUDE
                }
            }
        }
        stage("Install dependencies"){
            when {
                expression {
                    return shouldExecuteStage(someEnums.BuildPipelineSteps.INSTALL_DEPS)
                }
            }
            steps{
                echo "========Installing dependencies========"
                sh "pwd"
                sh "ls -ltr"
            }
        }
        stage("Unit Test"){
            when {
                expression {
                    return shouldExecuteStage(someEnums.BuildPipelineSteps.UNIT_TEST)
                }
            }
            steps{
                echo "========UNIT TEST========"
            }
        }
        stage("Unit Test w coverage"){
            when {
                expression {
                    return shouldExecuteStage(someEnums.BuildPipelineSteps.UNIT_TEST_COVERAGE)
                }
            }
            steps{
                echo "========UNIT TEST========"
            }
        }
    }
}